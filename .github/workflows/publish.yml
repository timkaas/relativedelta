name: Publish

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
      - 'v[0-9]+.[0-9]+.[0-9]+-**'

env:
  CARGO_TERM_COLOR: always

jobs:
  audit:
    name: Audit
    runs-on: ubuntu-latest
    timeout-minutes: 10
    permissions:
      issues: write
      checks: write
    steps:
      - uses: actions/checkout@v4
        # Needed for audit-check@v2
      - name: generate Cargo.lock
        run: cargo generate-lockfile
      - uses: rustsec/audit-check@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  build_and_test_linux:
    name: Build and Test (Linux)
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable

      - uses: taiki-e/install-action@nextest
      - name: 'Build and test'
        run: cargo nextest run --workspace --all-targets --all-features

  build_and_test_windows:
    name: Build and Test (Windows)
    runs-on: windows-latest
    timeout-minutes: 10
    steps:
      - name: Prepare symlink configuration
        run: git config --global core.symlinks true

      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable

      - uses: taiki-e/install-action@nextest
      - name: 'Build and test'
        run: cargo nextest run --workspace --all-targets --all-features

  release:
    name: Create Release
    needs:
      - audit
      - build_and_test_linux
      - build_and_test_windows
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          draft: false
          prerelease: false
          target_commitish: release
          generate_release_notes: true
          make_latest: true

  crates_io_publish:
    name: Publish (crates.io)
    needs:
      - audit
      - build_and_test_linux
      - build_and_test_windows

    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable

      - name: cargo login
        run: |-
          echo "${{ secrets.CRATES_IO_TOKEN }}" | cargo login

      - name: cargo release publish
        run: |-
          TAG=${{ github.ref_name }}
          echo "Publishing version $TAG"
          VERSION=${TAG#v}
          echo "Version is $VERSION"
          sed -i "s/0.0.0-replace-me/$VERSION/g" Cargo.toml
          cargo publish --all-features --allow-dirty